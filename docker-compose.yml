services:
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    ports:
      - "3307:3306"
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-defaultpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-qc-test}
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "${FRONTEND_PORT:-3001}:${FRONTEND_PORT:-3001}"
    depends_on:
      - backend
    env_file:
      - ./.env
    environment:
      FRONTEND_HOST: ${FRONTEND_HOST:-0.0.0.0}
      FRONTEND_PORT: ${FRONTEND_PORT:-3001}

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "${BACKEND_PORT:-3002}:${BACKEND_PORT:-3002}"
    env_file:
      - ./.env
    environment:
      BACKEND_HOST: ${BACKEND_HOST:-0.0.0.0}
      BACKEND_PORT: ${BACKEND_PORT:-3002}
      DB_HOST: ${MYSQL_HOST:-mysql}
      DB_PORT: ${MYSQL_PORT:-3306}
      DB_USER: ${MYSQL_USER:-}
      DB_PASSWORD: ${MYSQL_PASSWORD:-}
      DB_DATABASE: ${MYSQL_DATABASE:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}

  nginx:
    image: nginx:1.25
    container_name: nginx
    ports:
      - "3000:3000"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
